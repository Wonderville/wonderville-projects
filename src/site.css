/* -- includes --*/
@import "_includes/shared.css";
@import "_includes/donate.css";
@import "_includes/home.css";
@import "_includes/programs.css";

/* -- resets (more) -- */
* {
  box-sizing: border-box;
}

body {
  line-height: 1.2;
}

/* -- states -- */
body.is-modal {
  overflow: hidden;
}

@media (min-width: $desktop) {
  /* account for scrollbar gutter */
  .is-modal .Page > * {
    padding-right: 15px;
  }
}

/* -- .Page -- */
.Page {
  position: relative;
  font-family: $fontSans;
  font-size: $fontSize-base;
  font-weight: $fontWeightRegular;
  background: repeating-linear-gradient(
    $angle,
    $gray0 0px,
    $gray0 1px,
    $white 1px,
    $white 8px
  );
}

/* -- .Page > native -- */
.Page a {
  cursor: pointer;
}

::selection {
  background: var(--color2);
}

/* -- TODO: nicer way to select non-special links -- */
.Page a:not(.NavLink):not(.Button) {
  display: inline-block;
  color: var(--color1);
  animation: none;
}

.Page a:not(.NavLink):not(.Button):hover {
  animation: Shaking 0.4s infinite;
}

@keyframes Shaking {
  0% {
    transform: rotate(0deg);
  }

  25% {
    transform: rotate(0.5deg);
  }

  50% {
    transform: rotate(0deg);
  }

  75% {
    transform: rotate(-0.5deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

/* -- .Page-header -- */
.Page-logo {
  display: flex;
  justify-content: center;
  padding-top: $spacing3;
  padding-left: $marginHorizontal;
  padding-right: $marginHorizontal;
  font-size: $fontSize2;
  font-weight: bold;
  font-style: italic;
}

@media (min-width: $desktop) {
  .Page-logo {
    padding-left: $marginDesktopHorizontal;
    padding-right: $marginDesktopHorizontal;
  }
}

.Page-center {
  position: relative;
  display: flex;
  justify-content: center;
  z-index: 2;
}

.Page-content {
  overflow: hidden;
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding-top: $marginVertical;
  padding-bottom: $marginVertical;
  padding-left: $marginHorizontal;
  padding-right: $marginHorizontal;
}

@media (min-width: $desktop) {
  .Page-content {
    max-width: $desktop-maxWidth;
    padding-top: $marginDesktopVertical;
    padding-bottom: $marginDesktopVertical;
    padding-left: $marginDesktopHorizontal;
    padding-right: $marginDesktopHorizontal;
  }
}

/* -- .PageSection -- */
.PageSection {
  z-index: 1;
  scroll-margin-top: 94px;
}

.PageSection + .PageSection {
  margin-top: $spacing5;
  padding-top: $spacing5;
}

.PageSection-title {
  position: relative;
  display: flex;
  justify-content: center;
  margin-bottom: $spacing5;
  font-family: $fontSans;
  font-size: $fontSize2;
}

.PageSection-titleText {
  position: relative;
}

.PageSection-titleText:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color2);
  z-index: -1;
}

@media (min-width: $desktop) {
  .PageSection-title {
    margin-bottom: $spacing7;
    font-size: $fontSize3;
  }
}

.PageSection-subtitle {
  font-size: $fontSize1;
}

/* -- .PageDivider -- */
.PageDivider {
  display: flex;
  justify-content: center;
  margin-top: $spacing5;
  margin-bottom: $spacing5;
}

.PageDivider::after {
  content: "";
  flex: 1;
  max-width: 400px;
  height: 10px;
  background: repeating-linear-gradient(
    -60deg,
    var(--color1) 0px,
    var(--color1) 1px,
    $clear 1px,
    $clear 4px
  );
}

@media (min-width: $desktop) {
  .PageDivider {
    margin-top: $spacing7;
    margin-bottom: $spacing7;
  }
}

/* -- .PageHeader -- */
.PageHeader {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: $sizeHeader;
}

@media (min-width: $desktop) {
  .PageHeader {
    height: $sizeHeaderDesktop;
  }
}

.PageHeader-bg {
  position: absolute;
  display: block;
  top: 0;
  width: 100%;
  height: $sizeHeaderImage;
  opacity: 0.5;
  object-fit: cover;
}

@media (min-width: $desktop) {
  .PageHeader-bg {
    height: $sizeHeaderImageDesktop;
  }
}

.PageHeader-title {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: $sizeLogo;
  margin-top: $sizeNavHalf;
  margin-left: $marginHorizontal;
  margin-right: $marginHorizontal;
}

@media (min-width: $desktop) {
  .PageHeader-title {
    margin-top: $sizeNavDesktopHalf;
    margin-left: $marginDesktopHorizontal;
    margin-right: $marginDesktopHorizontal;
  }
}

.PageHeader-logo {
  display: flex;
  justify-content: center;
  max-height: 200px;
}

.PageHeader-logoImage {
  display: block;
  width: 100%;
  object-fit: contain;
}

@media (min-width: $desktop) {
  .PageHeader-title {
    /* rebalance the logo visually */
    transform: translateX(-3vw);
  }
}

.PageHeader-subtitle {
  display: flex;
  flex-direction: row-reverse;
  align-items: baseline;
  align-self: flex-end;
  gap: $spacing4;
}

.PageHeader-programs {
  margin-right: -$spacing1; /* letter-spacing is added after the last character... */
  font-size: 2.5em;
  letter-spacing: $spacing1;
}

@media (min-width: $desktop) {
  .PageHeader-programs {
    font-size: 5.5em;
  }
}

.PageHeader-org {
  position: absolute;
  top: $spacing3;
  left: $spacing3;
  font-size: 1.2em;
}

@media (min-width: $desktop) {
  .PageHeader-org {
    top: $spacing4;
    left: $spacing4;
    font-size: 2em;
  }
}

/* -- .PageFooter -- */
.PageFooter {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: $sizeFooter;
  z-index: 1;
}

.PageFooter-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.4;
  object-fit: cover;
}

.PageFooter-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-left: $spacing2;
  margin-right: $spacing2;
  gap: $spacing2;
  z-index: 1;
}

.PageFooter-thanks {
  font-size: $fontSize1;
}

.PageFooter-donate {
  color: $colorDonate0;
  background-color: $colorDonate1;
  transform: rotate(1deg);
  transition: opacity 0.3s;
}

.PageFooter-donate:active {
  opacity: 0.7;
}

.PageFooter-contact {
  font-size: $fontSize1;
  text-align: center;
  transform: rotate(-1deg);
}

.PageFooter-or {
  font-size: $fontSize1;
}

.PageFooter-credits {
  position: absolute;
  font-size: 0.8em;
  bottom: max($spacing2, env(safe-area-inset-bottom));
  transform: rotate(-2deg);
  transition: bottom 0.3s ease-in;
}

@media (min-width: $desktop) {
  .PageFooter-credits {
    bottom: 32px;
    left: 32px;
  }
}

/* -- .Nav -- */
.Nav {
  overflow: hidden;
  display: flex;
  position: sticky;
  justify-content: center;
  height: $sizeNav;
  top: -1px;
  border-bottom: 2px solid black;
  z-index: 3;
}

@media (min-width: $desktop) {
  .Nav {
    height: $sizeNavDesktop;
  }
}

.Nav-background {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: repeating-linear-gradient(
    -$angle,
    $gray0 0px,
    $gray0 1px,
    $white 1px,
    $white 8px
  );

  transform: translateX(-100%);
  transition: none;
}

.Nav[stuck="enter"] .Nav-background {
  transform: none;
  transition: transform 0.2s;
}

.Nav[stuck=""] .Nav-background {
  transform: none;
}

.Nav[stuck="exit"] .Nav-background {
  transform: translateY(100%);
  transition: transform 0.3s;
}

.Nav-links {
  display: flex;
  align-items: center;
  gap: $spacing3;
  z-index: 1;
}

@media (min-width: $desktop) {
  .Nav-links {
    max-width: $desktop-maxWidth;
    padding-left: $marginDesktopHorizontal;
    padding-right: $marginDesktopHorizontal;
  }
}

.NavLink {
  font-size: $fontSize1;
  color: $black;
  background: $white;
  padding-top: $spacing0;
  padding-bottom: $spacing0;
  padding-left: $spacing1;
  padding-right: $spacing1;
}

.NavLink:visited {
  color: $black;
}

@media (min-width: $desktop) {
  .NavLink {
    font-size: $fontSize2;
  }
}

/* -- .Button -- */
.Button {
  padding-top: 8px;
  padding-bottom: 5px;
  padding-left: $spacing1;
  padding-right: $spacing1;
  border-width: 2px;
  border-style: dashed;
  border-radius: $borderRadius1;
  font-size: $fontSize2;
  text-decoration: none;
}

/* -- .Box -- */
.Box {
  padding: $spacing2;
  border-width: 2px;
  border-style: dashed;
  border-color: var(--color1);
  border-radius: $borderRadius1;
  background: repeating-linear-gradient(
    -$angle,
    $white 0px,
    $white 1px,
    var(--color0) 1px,
    var(--color0) 8px
  );
}

.Box--small {
  padding: $spacing1;
}

.Box--big {
  padding: $spacing4;
}

/* -- .Box/.Button -- */
@media (min-width: $desktop) {
  .Box,
  .Button {
    transition: transform 350ms ease-out 100ms;
  }

  .Box[class]:hover,
  .Button[class]:hover {
    transform: scale(1.2);
  }

  .Box--big {
    transition: none;
  }

  .Box--big[class]:hover {
    transform: none;
  }
}

/* -- .Loader -- */
.Loading {
  position: fixed;
  top: 0;
  left: 0;
  width: 0%;
  height: 5px;
  background-color: $colorHome1;
}

.Loading.is-loading {
  width: 66%;
  animation: Loading, Loading-wait;
  animation-duration: 1s, 1s;
  animation-delay: 0s, 1s;
  animation-iteration-count: 1, infinite;
  animation-timing-function: initial, ease-in-out;
  animation-direction: normal, alternate;
}

@keyframes Loading {
  from { width: 0%; }
  to   { width: 69%; }
}

@keyframes Loading-wait {
  from { width: 69%; }
  to   { width: 69.5%; }
}